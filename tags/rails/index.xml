<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rails on Razvan-Marian AVRAMESCU</title>
    <link>https://www.avramescu.net/tags/rails/</link>
    <description>Recent content in rails on Razvan-Marian AVRAMESCU</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 27 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://www.avramescu.net/tags/rails/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How I Fixed Ruby on Rails Hotwire Broadcast for Unpublished Comments to Show Pending Approval for Current User</title>
      <link>https://www.avramescu.net/how-i-fixed-ruby-on-rails-hotwire-broadcast-for-unpublished-comments-to-show-pending-approval-for-current-user/</link>
      <pubDate>Sun, 27 Jul 2025 00:00:00 +0000</pubDate>
      
      <guid>https://www.avramescu.net/how-i-fixed-ruby-on-rails-hotwire-broadcast-for-unpublished-comments-to-show-pending-approval-for-current-user/</guid>
      <description>&lt;p&gt;In my recent project, I faced a challenge with broadcasting comments in a Ruby on Rails application using Hotwire. The goal was to ensure that unpublished comments would only be visible to the user who created them, while published comments would be visible to everyone. Here’s how I tackled this issue.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Adding Nostr Login to My Rails Application</title>
      <link>https://www.avramescu.net/adding-nostr-login-to-my-rails-application/</link>
      <pubDate>Sat, 25 Jan 2025 10:00:00 +0000</pubDate>
      
      <guid>https://www.avramescu.net/adding-nostr-login-to-my-rails-application/</guid>
      <description>&lt;p&gt;In this blog post, I will walk you through the process of integrating Nostr login functionality into my Rails application using the Nos2x extension. This involved modifying the Devise User model, adding a new route to handle Nostr users, and integrating JavaScript to enhance the login experience.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Enhancing &#34;In Archives&#34; Rails Applications Search Functionality</title>
      <link>https://www.avramescu.net/enhancing-in-archives-rails-applications-search-functionality/</link>
      <pubDate>Sun, 19 Jan 2025 10:00:00 +0000</pubDate>
      
      <guid>https://www.avramescu.net/enhancing-in-archives-rails-applications-search-functionality/</guid>
      <description>&lt;p&gt;In web development, an efficient and user-friendly search function is essential for a good user experience. While working on the &amp;ldquo;In Archives&amp;rdquo; project, I initially cached the dataset without pagination, which led to poor performance—eight times worse than expected—because pagination was applied to the entire cached dataset.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
